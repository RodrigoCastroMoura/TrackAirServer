#!/usr/bin/env python3
"""
Teste espec√≠fico para eventos de igni√ß√£o do GV50
"""

import asyncio
import socket
import subprocess
import time

async def test_ignition_events():
    """Testa eventos de igni√ß√£o (GTIGN e GTIGF)."""
    print("üß™ TESTE DE EVENTOS DE IGNI√á√ÉO GV50")
    print("=" * 50)
    
    # Aguardar servidor inicializar
    time.sleep(3)
    
    try:
        # Conectar como dispositivo GPS
        print("\n1Ô∏è‚É£ Estabelecendo conex√£o...")
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.connect(('127.0.0.1', 8000))
        print("‚úÖ Conex√£o estabelecida")
        
        # Simular mensagens de evento de igni√ß√£o
        messages = [
            # Dados GPS normais (igni√ß√£o ligada)
            "+RESP:GTFRI,060228,555444333222111,,0,0,1,1,4.3,92,70.0,-46.633308,-23.550520,20250722210000,0460,0000,18d8,6141,00,2000.0,20250722210000,A001$",
            
            # Evento igni√ß√£o LIGADA
            "+RESP:GTIGN,060228,555444333222111,,0,0,1,1,4.3,92,70.0,-46.633308,-23.550520,20250722210030,0460,0000,18d8,6141,00,B001$",
            
            # Dados GPS com igni√ß√£o ligada
            "+RESP:GTFRI,060228,555444333222111,,0,0,1,1,15.2,92,71.0,-46.633408,-23.550620,20250722210100,0460,0000,18d8,6141,00,2000.0,20250722210100,A002$",
            
            # Evento igni√ß√£o DESLIGADA  
            "+RESP:GTIGF,060228,555444333222111,,0,0,0,0,0.0,92,70.0,-46.633308,-23.550520,20250722210130,0460,0000,18d8,6141,00,B002$",
            
            # Dados GPS com igni√ß√£o desligada
            "+RESP:GTFRI,060228,555444333222111,,0,0,0,1,0.0,92,70.0,-46.633308,-23.550520,20250722210200,0460,0000,18d8,6141,00,2000.0,20250722210200,A003$"
        ]
        
        print("\n2Ô∏è‚É£ Enviando eventos de igni√ß√£o...")
        
        for i, message in enumerate(messages, 1):
            event_type = "Normal"
            if "GTIGN" in message:
                event_type = "üî• IGNI√á√ÉO LIGADA"
            elif "GTIGF" in message:
                event_type = "üîå IGNI√á√ÉO DESLIGADA"
            elif "GTFRI" in message and ",1,1," in message:
                event_type = "üìç GPS (igni√ß√£o ON)"
            elif "GTFRI" in message and ",0,1," in message:
                event_type = "üìç GPS (igni√ß√£o OFF)"
                
            print(f"\nüì° Mensagem {i}/5: {event_type}")
            print(f"   Enviando: {message[:60]}...")
            
            # Enviar mensagem
            sock.send(message.encode())
            
            # Aguardar resposta
            try:
                response = sock.recv(1024).decode()
                print(f"   üì® Resposta: {response}")
            except socket.timeout:
                print("   ‚ö†Ô∏è Timeout na resposta")
            
            # Aguardar antes da pr√≥xima mensagem
            await asyncio.sleep(2)
        
        print("\n‚úÖ Teste de eventos de igni√ß√£o completado!")
        print("\nüéØ RESUMO:")
        print("   ‚úÖ Evento GTIGN (igni√ß√£o ligada) processado")
        print("   ‚úÖ Evento GTIGF (igni√ß√£o desligada) processado")
        print("   ‚úÖ Dados GPS com status de igni√ß√£o processados")
        print("   ‚úÖ ACK espec√≠fico enviado para cada tipo")
        
    except Exception as e:
        print(f"\n‚ùå Erro no teste: {e}")
        
    finally:
        # Fechar conex√£o
        try:
            sock.close()
            print("üîå Conex√£o fechada")
        except:
            pass
        
    print("\n" + "=" * 50)
    print("üèÅ TESTE CONCLU√çDO - Sistema agora detecta igni√ß√£o corretamente!")

if __name__ == "__main__":
    asyncio.run(test_ignition_events())